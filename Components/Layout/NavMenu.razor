@implements IDisposable
@using BlazorApp3.Data
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SignInManager<ApplicationUser> SignInManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href=""><img src="btec.png" width="100" height="50" alt="BTEC Logo" /></a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if (isAdmin || isLecture)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="homemain" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="courses">
                    <i class="fa-solid fa-book-open me-3"></i> Courses
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="students">
                    <i class="fa-solid fa-person-half-dress me-3"></i> Students
                </NavLink>
            </div>
        }

        @if (isAdmin)
        {
         
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="semesters">
                    <i class="fa-solid fa-calendar-days me-3" aria-hidden="true"></i> Semesters

                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="departments">
                    <i class="fa-solid fa-people-roof me-3"></i> Departments
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="majors">
                    <i class="bi fa-solid fa-graduation-cap"></i> Majors
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="subjects">
                    <i class="fa-solid fa-book-open me-3"></i> Subjects
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="lecturers">
                    <i class="fa-solid fa-person-chalkboard me-3"></i> Lectures
                </NavLink>
            </div>
        }

        @if (isStudent)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="homemain" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="courses/my-course">
                    <i class="fa-solid fa-book-open me-3"></i> Courses
                </NavLink>
            </div>
        }



        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <i class="fa-regular fa-user me-3"></i> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Signout">
                        <i class="fa-solid fa-arrow-right-from-bracket me-3"></i>
                        Logout
                    </NavLink>


                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;
    public static bool isStudent;
    public static bool isAdmin;
    public static bool isLecture;
    public static string? userId;

    protected override async Task OnInitializedAsync()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
         userId = user.FindFirst(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value
             ?? user.FindFirst(c => c.Type == "sub")?.Value;
        // Check if the user is in the "Student" role
        isStudent = user.Claims.Any(c => c.Type == "Role" && c.Value == "Student");
        isAdmin = user.Claims.Any(c => c.Type == "Role" && c.Value == "Admin");
        isLecture = user.Claims.Any(c => c.Type == "Role" && c.Value == "Lecture");

    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

