@page "/semesters/delete"

@using Microsoft.EntityFrameworkCore
@using BlazorApp3.Models
@inject IDbContextFactory<BlazorApp3.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager


<PageTitle>Delete</PageTitle>

<h1><i class="fa-solid fa-trash"></i></h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Semesters</h4>
    <hr />
    @if (semesters is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <div class="container mt-5">
            <h4 class="mb-3">Semester Details</h4>
            <hr />
            <div class="row">
                <div class="col-md-6">
                    <section class="card shadow-sm">
                        <div class="card-body">
                            <dl class="row mb-3">
                                <dt class="col-sm-4 font-weight-bold">Name:</dt>
                                <dd class="col-sm-8">@semesters.Name</dd>
                            </dl>
                            <dl class="row mb-3">
                                <dt class="col-sm-4 font-weight-bold">Start Date:</dt>
                                <dd class="col-sm-8">@semesters.StartDate</dd>
                            </dl>
                            <dl class="row mb-3">
                                <dt class="col-sm-4 font-weight-bold">End Date:</dt>
                                <dd class="col-sm-8">@semesters.EndDate</dd>
                            </dl>
                            <EditForm method="post" Model="semesters" OnValidSubmit="DeleteSemesters" FormName="delete" Enhance>
                                <button type="submit" class="btn btn-danger" disabled="@(semesters is null)">Delete</button>
                            </EditForm>
                            <div class="text-center mt-3">
                                <a href="/semesters" class="text-decoration-none">Back to List</a>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>

        <style>
            body {
                background-color: #f8f9fa;
            }

            .card {
                border: none;
                border-radius: 10px;
            }

            .card-body {
                padding: 2rem;
            }

            .font-weight-bold {
                font-weight: 600;
            }

            .btn-danger {
                background-color: #dc3545;
                border-color: #dc3545;
            }

                .btn-danger:hover {
                    background-color: #c82333;
                    border-color: #bd2130;
                }

            .text-decoration-none {
                color: #007bff;
            }

                .text-decoration-none:hover {
                    color: #0056b3;
                    text-decoration: underline !important;
                }

            .mb-3 {
                margin-bottom: 1rem;
            }
        </style>

    }
</div>

@code {
    Semesters? semesters;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        semesters = await context.Semesters.FirstOrDefaultAsync(m => m.Id == Id);

        if (semesters is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteSemesters()
    {
        using var context = DbFactory.CreateDbContext();
        context.Semesters.Remove(semesters!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/semesters");
    }
}
