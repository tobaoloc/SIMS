@page "/courses/grade"

@using Microsoft.EntityFrameworkCore
@using BlazorApp3.Models
@inject IDbContextFactory<BlazorApp3.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<PageTitle>Add Grades</PageTitle>

<h1>Add Grades</h1>
@if (showNotification)
{
    <div class="alert alert-success mt-3">Grades and Notes have been successfully saved!</div>
}
<div>
    <hr />
    @if (courses is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="row">
            <div class="col-md-6">
                <section class="card shadow-sm">
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-3">Name:</dt>
                            <dd class="col-sm-9">@courses.Name</dd>
                            <dt class="col-sm-3">Start Date:</dt>
                            <dd class="col-sm-9">@courses.StartDate</dd>
                            <dt class="col-sm-3">End Date:</dt>
                            <dd class="col-sm-9">@courses.EndDate</dd>
                        </dl>
                    </div>
                </section>
            </div>
            <div class="col-md-6">
                <section class="card shadow-sm">
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-3">Semester:</dt>
                            <dd class="col-sm-9">@courses.Semester.Name</dd>
                            <dt class="col-sm-3">Lecture:</dt>
                            <dd class="col-sm-9">@courses.Lecture.Name</dd>
                            <dt class="col-sm-3">Subject:</dt>
                            <dd class="col-sm-9">@courses.Subject.Name</dd>
                        </dl>
                    </div>
                </section>
            </div>
        </div>
        <style>
            body {
                background-color: #f8f9fa;
            }

            .card {
                border: none;
                border-radius: 10px;
            }

            .card-body {
                padding: 2rem;
            }

            .card-title {
                color: #333;
                font-weight: 600;
            }

            .btn-primary {
                background-color: #007bff;
                border-color: #007bff;
            }

                .btn-primary:hover {
                    background-color: #0056b3;
                    border-color: #0056b3;
                }

            .form-control:focus {
                border-color: #80bdff;
                box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
            }

            .text-decoration-none {
                color: #007bff;
            }

                .text-decoration-none:hover {
                    color: #0056b3;
                    text-decoration: underline !important;
                }

            .row dt {
                font-weight: 600;
            }
        </style>
    }
    <hr />
    <h3>List of Students Enrolled</h3>
    <div class="container mt-5">
        <h4 class="mb-3">Student Grades and Notes</h4>
        <hr />
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th class="text-center">No</th>
                        <th class="text-center">Code</th>
                        <th class="text-center">Name</th>
                        <th class="text-center">Email</th>
                        <th class="text-center">Grade</th>
                        <th class="text-center">Note</th>
                    </tr>
                </thead>
                <tbody>
                    @if (StudentCourses != null && StudentCourses.Count > 0)
                    {
                        int i = 1;
                        @foreach (var student in StudentCourses)
                        {
                            <tr>
                                <td class="text-center">@i</td>
                                <td class="text-center">@student.Student.Code</td>
                                <td class="text-center">@student.Student.Name</td>
                                <td class="text-center">@student.Student.Email</td>
                                <td class="text-center">
                                    <input type="text" @bind="student.Grade" class="form-control" placeholder="Grade" />
                                </td>
                                <td class="text-center">
                                    <input type="text" @bind="student.Note" class="form-control" placeholder="Note" />
                                </td>
                            </tr>
                            i++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center">No data!</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <button class="btn btn-primary mt-3" @onclick="SaveGradesAndNotes">Save Grades and Notes</button>
    </div>

    <style>
        body {
            background-color: #f8f9fa;
        }

        .table {
            border-collapse: separate;
            border-spacing: 0;
        }

        .table-bordered {
            border: 1px solid #dee2e6;
        }

            .table-bordered th, .table-bordered td {
                border: 1px solid #dee2e6;
            }

        .table thead th {
            background-color: #e9ecef;
            font-weight: bold;
        }

        .table tbody td {
            vertical-align: middle;
        }

        .table input.form-control {
            width: 100%;
            box-sizing: border-box;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #0056b3;
            }
    </style>


</div>

@code {
    Courses? courses;
    private bool showNotification = false;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    public List<StudentCourse> StudentCourses { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        courses = await context.Courses
            .Include(m => m.Semester)
            .Include(m => m.Subject)
            .Include(m => m.Lecture)
            .FirstOrDefaultAsync(m => m.Id == Id);

        StudentCourses = await context.StudentCourses
            .Where(course => course.CourseId == Id)
            .Include(student => student.Student)
            .ToListAsync();

        if (courses is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task SaveGradesAndNotes()
    {
        using var context = DbFactory.CreateDbContext();

        foreach (var studentCourse in StudentCourses)
        {
            var existingStudentCourse = await context.StudentCourses
                .FirstOrDefaultAsync(sc => sc.CourseId == Id && sc.StudentId == studentCourse.StudentId);

            if (existingStudentCourse != null)
            {
                existingStudentCourse.Grade = studentCourse.Grade;
                existingStudentCourse.Note = studentCourse.Note;
            }
        }

        await context.SaveChangesAsync();
        showNotification = true;
        StateHasChanged();

        // Hide the notification after a delay
        await Task.Delay(3000);
        showNotification = false;
        StateHasChanged();
    }
}
