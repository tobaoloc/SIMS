@page "/departments/details"

@using Microsoft.EntityFrameworkCore
@using BlazorApp3.Models
@inject IDbContextFactory<BlazorApp3.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1><i class="fa-solid fa-circle-info"></i></h1>

<div>
    <h4>Departments</h4>
    <hr />
    @if (departments is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <div class="container mt-5">
            <h4 class="mb-3">Department Details</h4>
            <hr />
            <div class="row">
                <div class="col-md-6">
                    <section class="card shadow-sm">
                        <div class="card-body">
                            <dl class="row mb-4">
                                <dt class="col-sm-3 font-weight-bold">Name:</dt>
                                <dd class="col-sm-9">@departments.Name</dd>
                            </dl>
                            <div class="text-center mt-4">
                                <a href="@($"/departments/edit?id={departments.Id}")" class="btn btn-warning">Edit</a>
                                <a href="@($"/departments")" class="btn btn-secondary ms-2">Back to List</a>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>

        <style>
            body {
                background-color: #f8f9fa;
            }

            .card {
                border: none;
                border-radius: 10px;
            }

            .card-body {
                padding: 2rem;
            }

            .font-weight-bold {
                font-weight: 600;
            }

            .btn-warning {
                background-color: #ffc107;
                border-color: #ffc107;
            }

                .btn-warning:hover {
                    background-color: #e0a800;
                    border-color: #d39e00;
                }

            .btn-secondary {
                background-color: #6c757d;
                border-color: #6c757d;
            }

                .btn-secondary:hover {
                    background-color: #5a6268;
                    border-color: #545b62;
                }

            .text-center {
                text-align: center;
            }

            .text-decoration-none {
                color: #007bff;
                text-decoration: none;
            }

                .text-decoration-none:hover {
                    color: #0056b3;
                    text-decoration: underline;
                }

            .mb-4 {
                margin-bottom: 1.5rem;
            }

            .mt-4 {
                margin-top: 1.5rem;
            }

            .ms-2 {
                margin-left: 0.5rem;
            }
        </style>

    }
</div>

@code {
    Departments? departments;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        departments = await context.Departments.FirstOrDefaultAsync(m => m.Id == Id);

        if (departments is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
